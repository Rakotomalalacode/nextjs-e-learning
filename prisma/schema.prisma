// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum Role {
  student
  teacher
  admin
}

model User {
  id         Int       @id @default(autoincrement())
  googleId   String    @unique
  name       String?
  email      String    @unique
  image      String?
  imageLocal String?
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
  role       Role      @default(student)
  Product    Product[]
}

model Product {
  id           Int      @id @default(autoincrement())
  name         String
  description  String?
  tag          String
  price        Float
  maincoursUrl String?  @map("main_cours_url")
  intocoursUrl String?  @map("intro_cours_url")
  thumbnailUrl String?  @map("thumbnail_url")
  createdAt    DateTime @default(now()) @map("created_at")
  updatedAt    DateTime @updatedAt @map("updated_at")
  numero       Int         @default(1)
  userId       Int // Clé étrangère: Identifiant de l'utilisateur
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade) // Définition de la relation

  @@map("products")
}

/**
 * model Product {
 * id          Int       @id @default(autoincrement())
 * name        String
 * description String?
 * userId      Int       // Clé étrangère: Identifiant de l'utilisateur
 * user        User      @relation(fields: [userId], references: [id], onDelete: Cascade) // Définition de la relation
 * createdAt   DateTime  @default(now())
 * updatedAt   DateTime  @updatedAt
 * }
 */

/**
 * generator client {
 * provider = "prisma-client-js"
 * }
 * datasource db {
 * provider = "mysql"
 * url      = env("DATABASE_URL")
 * }
 * model User {
 * id         Int      @id @default(autoincrement())
 * googleId   String   @unique
 * name       String?
 * email      String   @unique
 * image      String?
 * createdAt  DateTime @default(now())
 * updatedAt  DateTime @updatedAt
 * }
 */
